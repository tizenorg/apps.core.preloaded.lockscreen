/*
 * Copyright 2012  Samsung Electronics Co., Ltd
 *
 * Licensed under the Flora License, Version 1.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.tizenopensource.org/license
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#define KEYPAD_PANEL_WIDTH 720.0
#define KEYPAD_PANEL_HEIGHT 536.0
#define KEYPAD_BUTTON_WIDTH 62.0
#define KEYPAD_BUTTON_HEIGHT 82.0
#define KEYPAD_REL_W(x) ((x)/KEYPAD_PANEL_WIDTH)
#define KEYPAD_REL_H(y) ((y)/KEYPAD_PANEL_HEIGHT)
#define KEYPAD_BUTTON_REL_W(x) ((x)/KEYPAD_BUTTON_WIDTH)
#define KEYPAD_BUTTON_REL_H(y) ((y)/KEYPAD_BUTTON_HEIGHT)

#define MODE_ALPHA_LOWER 0
#define MODE_ALPHA_UPPER 1
#define MODE_SYMBOL_1 2
#define MODE_SYMBOL_2 3

#define DECLARE_KEY_CHAR_TABLE() \
			new keyChar[152] = { \
				'1', '1', ' ',  ' ', \
				'2', '2', ' ',  ' ', \
				'3', '3', ' ',  ' ', \
				'4', '4', ' ',  ' ', \
				'5', '5', ' ',  ' ', \
				'6', '6', ' ',  ' ', \
				'7', '7', ' ',  ' ', \
				'8', '8', ' ',  ' ', \
				'9', '9', ' ',  ' ', \
				'0', '0', ' ',  ' ', \
				'q', 'Q', '1',  '#', \
				'w', 'W', '2',  '&', \
				'e', 'E', '3',  '%', \
				'r', 'R', '4',  '+', \
				't', 'T', '5',  '=', \
				'y', 'Y', '6',  '_', \
				'u', 'U', '7',  ' ', \
				'i', 'I', '8',  '|', \
				'o', 'O', '9',  '<', \
				'p', 'P', '0',  '>', \
				'a', 'A', '-',  '{', \
				's', 'S', '@',  '}', \
				'd', 'D', '*',  '[', \
				'f', 'F', '^',  ']', \
				'g', 'G', ':',  '$', \
				'h', 'H', ';',  ' ', \
				'j', 'J', '(',  ' ', \
				'k', 'K', ')',  ' ', \
				'l', 'L', '~',  ' ', \
				'z', 'Z', '/',  ' ', \
				'x', 'X', '\39',' ', \
				'c', 'C', '\34',' ', \
				'v', 'V', '.',  ' ', \
				'b', 'B', ',',  ' ', \
				'n', 'N', '?',  ' ', \
				'm', 'M', '!',  ' ', \
				',', ',', ',',  ',', \
				'.', '.', '.',  '.' \
			};\

#define DECLARE_KEY_DISP_STATUS_TABLE() \
			new keyDispInfo[152] = { \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 0,  0, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  2, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  1, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  2, \
				1, 1, 1,  1, \
				1, 1, 1,  1 \
			}; \

#define PART_KEYPAD_PLAIN_BUTTON(code, offx, offy, file, file_press) \
			part { \
				name: code; \
				type: IMAGE; \
				scale: 1; \
				mouse_events: 1; \
				description { \
					state: "default" 0.0; \
					rel1 { relative: KEYPAD_REL_W(offx) KEYPAD_REL_H(offy); to:"keypad.bg";} \
					rel2 { relative: KEYPAD_REL_W(offx+KEYPAD_BUTTON_WIDTH) KEYPAD_REL_H(offy+KEYPAD_BUTTON_HEIGHT); to:"keypad.bg"; } \
					color: 255 255 255 255; \
					image { \
						normal: file; \
						border: 9 9 9 9; \
						border_scale: 1; \
					} \
				} \
				description { \
					state: "pressed" 0.0; \
					inherit: "default" 0.0; \
					image.normal: file_press; \
				} \
				description { \
					state: "hide" 0.0; \
					visible: 0; \
				} \
			} \
			part { \
				name: code"_TEXT"; \
				type: TEXT; \
				scale: 1; \
				effect: SHADOW; \
				mouse_events: 0; \
				repeat_events: 1; \
				description { \
					state: "default" 0.0; \
					rel1 { relative: 0.0 KEYPAD_BUTTON_REL_H(0); to: code;} \
					rel2 { relative: 1.0 KEYPAD_BUTTON_REL_H(82); to: code;} \
					fixed: 1 1; \
					align: 0.5 0.5; \
					color: 255 255 255 255; \
					text { \
						font: "Tizen:style=Bold"; \
						text_class: "tizen"; \
						text: ""; \
						size: 48; \
						min:  0 0; \
						align: 0.5 0.5; \
					} \
				} \
				description { \
					state: "hide" 0.0; \
					visible: 0; \
				} \
			}

#define PROG_BUTTON_REACTION(txt) \
			program { \
				name: "down_"txt; \
				signal: "mouse,down,*"; \
				source: txt; \
				script { \
					set_state(PART:txt, "pressed", 0.0); \
					emit("pad_down", txt); \
				} \
			} \
			program { \
				name: "ani_"txt; \
				signal: "ani"; \
				source: txt; \
				action: STATE_SET "default" 0.0; \
				transition: SINUSOIDAL 0.05; \
				target: txt; \
			} \
			program { \
				name: "up_"txt; \
				signal: "mouse,up,1"; \
				source: txt; \
				script { \
					emit("pad_up", txt); \
					emit("ani", txt); \
				} \
			} \

#define PROG_KEYPAD_PLAIN_BUTTON(txt) \
			program { \
				name: "down_"txt; \
				signal: "mouse,down,*"; \
				source: txt; \
				script { \
					if (get_key_disp_info_by_index(txt) == 1) { \
						set_state(PART:txt, "pressed", 0.0); \
						emit("pad_down", txt); \
					} \
				} \
			} \
			program { \
				name: "ani_"txt; \
				signal: "ani"; \
				source: txt; \
				action: STATE_SET "default" 0.0; \
				transition: SINUSOIDAL 0.05; \
				target: txt; \
			} \
			program { \
				name: "up_"txt; \
				signal: "mouse,up,1"; \
				source: txt; \
				script { \
					emit("pad_up", txt); \
					emit("ani", txt); \
				} \
			} \
			program { \
				name: "clicked_"txt; \
				signal: "mouse,clicked,1"; \
				source: txt; \
				script { \
					if (get_key_disp_info_by_index(txt) == 1) { \
						new key_str[2]; \
						get_text(PART:txt"_TEXT", key_str, 2); \
						emit("pad_qwerty_clicked", key_str); \
					} \
				} \
			} \

group{
	name: "lock-complex-password";
	images {
		image: "ls_password_box_01.png" COMP;
		image: "ls_password_star_01.png" COMP;
	}

	parts{
		part{
			name: "bg";
			type: RECT;
			mouse_events: 1;
			description{
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
		part{
			name: "txt.title";
			type: TEXT;
			scale: 1;
			mouse_events: 0;
			effect: FAR_SHADOW;
			description{
				state: "default" 0.0;
				color: 255 255 255 255;
				rel1 {relative: 0.0 122/1280; to: "bg";}
				rel2 {relative: 1.0 (122+110)/1280; to: "bg";}
				text{
					font: "Tizen:style=Medium";
					text_class: "tizen";
					size: 36;
					align: 0.5 0.5;
				}
			}
		}
		part{
			name: "rect.password";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			description{
				state: "default" 0.0;
				rel1 {relative: 74/720 (126+110+12)/1280; to: "bg";}
				rel2 {relative: (74+572)/720 (126+110+12+140)/1280; to: "bg";}
				image {
					normal: "ls_password_box_01.png";
					border: 9 9 9 9;
					border_scale: 1;
				}
			}
		}
		part{
			name: "sw.password";
			type: SWALLOW;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description{
				state: "default" 0.0;
				align: 0.0 0.5;
				fixed: 1 1;
				rel1{
					relative: 0.025 0.0;
					to: "rect.password";
				}
				rel2{
					relative: 0.975 1.0;
					to: "rect.password";
				}
			}
		}
		part{
			name: "txt.result";
			type: TEXT;
			scale: 1;
			mouse_events: 0;
			effect: FAR_SHADOW;
			description{
				state: "default" 0.0;
				min: 0 88;
				color: 255 255 255 255;
				rel1 {relative: 42/720 1.0; to_x: "bg"; to_y: "rect.password"; offset: 0 40;}
				rel2 {relative: (720-42)/720 1.0; to_x: "bg"; to_y: "rect.password"; offset: 0 40;}
				text{
					font: "Tizen:style=Medium";
					text_class: "tizen";
					size: 36;
					align: 0.5 0.5;
				}
			}
		}
		part{
			name: "sw.keypad.qwerty";
			type: SWALLOW;
			scale: 1;
			mouse_events: 1;
			description{
				state: "default" 0.0;
				fixed: 0 1;
				align: 0.0 0.0;
				rel1{
					relative: 0.0 1.0;
					to: "bg";
				}
				rel2{
					relative: 1.0 1.0;
					to: "bg";
				}
			}
			description{
				state: "show" 0.0;
				inherit: "default" 0.0;
				rel1{
					relative: 0.0 (1280-536)/1280;
					to: "bg";
				}
				rel2{
					relative: 1.0 1.0;
					to: "bg";
				}
			}
		}
	}
	programs {
		program{
			name: "show,qwertykeyboard";
			signal: "show,qwertykeyboard";
			source: "sw.keypad.qwerty";
			action: STATE_SET "show" 0.0;
			target: "sw.keypad.qwerty";
			transition: LINEAR 0.2;
		}
		program{
			name: "hide,qwertykeyboard";
			signal: "hide,qwertykeyboard";
			source: "sw.keypad.qwerty";
			action: STATE_SET "default" 0.0;
			target: "sw.keypad.qwerty";
			transition: LINEAR 0.2;
			after: "hide,complexpw";
		}
		program{
			name: "hide,complexpw";
			signal: "hide,complexpw";
			source: "sw.keypad.qwerty";
			action: SIGNAL_EMIT "hide,complexpw" "event";
		}
	}
}

group{
	name: "lock-keypad-qwerty";

	images {
		image: "RB07_key_btn_01.png" COMP;
		image: "RB07_key_btn_02.png" COMP;
		image: "RB07_key_btn_perss.png" COMP;
		image: "RB07_icon_back_normal.png" COMP;
		image: "RB07_icon_back_dim.png" COMP;
		image: "RB07_icon_back_press.png" COMP;
		image: "RB07_key_btn_qwerty_01.png" COMP;
		image: "RB07_key_btn_qwerty_02.png" COMP;
		image: "RB07_icon_back_01.png" COMP;
		image: "RB07_icon_enter.png" COMP;
		image: "RB07_icon_shift_focused.png" COMP;
		image: "RB07_icon_shift_normal.png" COMP;
		image: "RB07_icon_space.png" COMP;
		image: "RB07_keypad_bg.png" COMP;
		image: "ls_button_sos_phone.png" COMP;
	}

	script {
		public g_key_mode;

		public init_qwerty_keypad() {
			set_int(g_key_mode, MODE_ALPHA_LOWER);
			set_key_display(MODE_ALPHA_LOWER);
			set_key_text(MODE_ALPHA_LOWER);
		}

		public switch_input_mode(mode) {
			set_key_display(mode);
			set_key_text(mode);
			set_int(g_key_mode, mode);
		}

		public set_key_display(mode) {
			DECLARE_KEY_DISP_STATUS_TABLE()

			if (keyDispInfo[0 + mode] == 0) {
				set_state(PART:"0", "hide", 0.0);
			} else {
				set_state(PART:"0", "default", 0.0);
			}
			if (keyDispInfo[4 + mode] == 0) {
				set_state(PART:"1", "hide", 0.0);
			} else {
				set_state(PART:"1", "default", 0.0);
			}
			if (keyDispInfo[8 + mode] == 0) {
				set_state(PART:"2", "hide", 0.0);
			} else {
				set_state(PART:"2", "default", 0.0);
			}
			if (keyDispInfo[12 + mode] == 0) {
				set_state(PART:"3", "hide", 0.0);
			} else {
				set_state(PART:"3", "default", 0.0);
			}
			if (keyDispInfo[16 + mode] == 0) {
				set_state(PART:"4", "hide", 0.0);
			} else {
				set_state(PART:"4", "default", 0.0);
			}
			if (keyDispInfo[20 + mode] == 0) {
				set_state(PART:"5", "hide", 0.0);
			} else {
				set_state(PART:"5", "default", 0.0);
			}
			if (keyDispInfo[24 + mode] == 0) {
				set_state(PART:"6", "hide", 0.0);
			} else {
				set_state(PART:"6", "default", 0.0);
			}
			if (keyDispInfo[28 + mode] == 0) {
				set_state(PART:"7", "hide", 0.0);
			} else {
				set_state(PART:"7", "default", 0.0);
			}
			if (keyDispInfo[32 + mode] == 0) {
				set_state(PART:"8", "hide", 0.0);
			} else {
				set_state(PART:"8", "default", 0.0);
			}
			if (keyDispInfo[36 + mode] == 0) {
				set_state(PART:"9", "hide", 0.0);
			} else {
				set_state(PART:"9", "default", 0.0);
			}
			if (keyDispInfo[40 + mode] == 0) {
				set_state(PART:"10", "hide", 0.0);
			} else {
				set_state(PART:"10", "default", 0.0);
			}
			if (keyDispInfo[44 + mode] == 0) {
				set_state(PART:"11", "hide", 0.0);
			} else {
				set_state(PART:"11", "default", 0.0);
			}
			if (keyDispInfo[48 + mode] == 0) {
				set_state(PART:"12", "hide", 0.0);
			} else {
				set_state(PART:"12", "default", 0.0);
			}
			if (keyDispInfo[52 + mode] == 0) {
				set_state(PART:"13", "hide", 0.0);
			} else {
				set_state(PART:"13", "default", 0.0);
			}
			if (keyDispInfo[56 + mode] == 0) {
				set_state(PART:"14", "hide", 0.0);
			} else {
				set_state(PART:"14", "default", 0.0);
			}
			if (keyDispInfo[60 + mode] == 0) {
				set_state(PART:"15", "hide", 0.0);
			} else {
				set_state(PART:"15", "default", 0.0);
			}
			if (keyDispInfo[64 + mode] == 0) {
				set_state(PART:"16", "hide", 0.0);
			} else {
				set_state(PART:"16", "default", 0.0);
			}
			if (keyDispInfo[68 + mode] == 0) {
				set_state(PART:"17", "hide", 0.0);
			} else {
				set_state(PART:"17", "default", 0.0);
			}
			if (keyDispInfo[72 + mode] == 0) {
				set_state(PART:"18", "hide", 0.0);
			} else {
				set_state(PART:"18", "default", 0.0);
			}
			if (keyDispInfo[76 + mode] == 0) {
				set_state(PART:"19", "hide", 0.0);
			} else {
				set_state(PART:"19", "default", 0.0);
			}
			if (keyDispInfo[80 + mode] == 0) {
				set_state(PART:"20", "hide", 0.0);
			} else {
				set_state(PART:"20", "default", 0.0);
			}
			if (keyDispInfo[84 + mode] == 0) {
				set_state(PART:"21", "hide", 0.0);
			} else {
				set_state(PART:"21", "default", 0.0);
			}
			if (keyDispInfo[88 + mode] == 0) {
				set_state(PART:"22", "hide", 0.0);
			} else {
				set_state(PART:"22", "default", 0.0);
			}
			if (keyDispInfo[92 + mode] == 0) {
				set_state(PART:"23", "hide", 0.0);
			} else {
				set_state(PART:"23", "default", 0.0);
			}
			if (keyDispInfo[96 + mode] == 0) {
				set_state(PART:"24", "hide", 0.0);
			} else {
				set_state(PART:"24", "default", 0.0);
			}
			if (keyDispInfo[100 + mode] == 0) {
				set_state(PART:"25", "hide", 0.0);
			} else {
				set_state(PART:"25", "default", 0.0);
			}
			if (keyDispInfo[104 + mode] == 0) {
				set_state(PART:"26", "hide", 0.0);
			} else {
				set_state(PART:"26", "default", 0.0);
			}
			if (keyDispInfo[108 + mode] == 0) {
				set_state(PART:"27", "hide", 0.0);
			} else {
				set_state(PART:"27", "default", 0.0);
			}
			if (keyDispInfo[112 + mode] == 0) {
				set_state(PART:"28", "hide", 0.0);
			} else {
				set_state(PART:"28", "default", 0.0);
			}
			if (keyDispInfo[116 + mode] == 0) {
				set_state(PART:"29", "hide", 0.0);
			} else {
				set_state(PART:"29", "default", 0.0);
			}
			if (keyDispInfo[120 + mode] == 0) {
				set_state(PART:"30", "hide", 0.0);
			} else {
				set_state(PART:"30", "default", 0.0);
			}
			if (keyDispInfo[124 + mode] == 0) {
				set_state(PART:"31", "hide", 0.0);
			} else {
				set_state(PART:"31", "default", 0.0);
			}
			if (keyDispInfo[128 + mode] == 0) {
				set_state(PART:"32", "hide", 0.0);
			} else {
				set_state(PART:"32", "default", 0.0);
			}
			if (keyDispInfo[132 + mode] == 0) {
				set_state(PART:"33", "hide", 0.0);
			} else {
				set_state(PART:"33", "default", 0.0);
			}
			if (keyDispInfo[136 + mode] == 0) {
				set_state(PART:"34", "hide", 0.0);
			} else {
				set_state(PART:"34", "default", 0.0);
			}
			if (keyDispInfo[140 + mode] == 0) {
				set_state(PART:"35", "hide", 0.0);
			} else {
				set_state(PART:"35", "default", 0.0);
			}
			if (keyDispInfo[144 + mode] == 0) {
				set_state(PART:"36", "hide", 0.0);
			} else {
				set_state(PART:"36", "default", 0.0);
			}
			if (keyDispInfo[148 + mode] == 0) {
				set_state(PART:"37", "hide", 0.0);
			} else {
				set_state(PART:"37", "default", 0.0);
			}
		}

		public set_key_text(mode) {
			DECLARE_KEY_CHAR_TABLE()
			new keyStr[2];

			snprintf(keyStr, 2, "%c", keyChar[0 + mode]);
			set_text(PART:"0_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[4 + mode]);
			set_text(PART:"1_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[8 + mode]);
			set_text(PART:"2_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[12 + mode]);
			set_text(PART:"3_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[16 + mode]);
			set_text(PART:"4_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[20 + mode]);
			set_text(PART:"5_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[24 + mode]);
			set_text(PART:"6_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[28 + mode]);
			set_text(PART:"7_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[32 + mode]);
			set_text(PART:"8_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[36 + mode]);
			set_text(PART:"9_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[40 + mode]);
			set_text(PART:"10_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[44 + mode]);
			set_text(PART:"11_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[48 + mode]);
			set_text(PART:"12_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[52 + mode]);
			set_text(PART:"13_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[56 + mode]);
			set_text(PART:"14_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[60 + mode]);
			set_text(PART:"15_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[64 + mode]);
			set_text(PART:"16_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[68 + mode]);
			set_text(PART:"17_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[72 + mode]);
			set_text(PART:"18_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[76 + mode]);
			set_text(PART:"19_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[80 + mode]);
			set_text(PART:"20_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[84 + mode]);
			set_text(PART:"21_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[88 + mode]);
			set_text(PART:"22_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[92 + mode]);
			set_text(PART:"23_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[96 + mode]);
			set_text(PART:"24_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[100 + mode]);
			set_text(PART:"25_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[104 + mode]);
			set_text(PART:"26_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[108 + mode]);
			set_text(PART:"27_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[112 + mode]);
			set_text(PART:"28_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[116 + mode]);
			set_text(PART:"29_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[120 + mode]);
			set_text(PART:"30_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[124 + mode]);
			set_text(PART:"31_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[128 + mode]);
			set_text(PART:"32_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[132 + mode]);
			set_text(PART:"33_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[136 + mode]);
			set_text(PART:"34_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[140 + mode]);
			set_text(PART:"35_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[144 + mode]);
			set_text(PART:"36_TEXT", keyStr);
			snprintf(keyStr, 2, "%c", keyChar[148 + mode]);
			set_text(PART:"37_TEXT", keyStr);
		}

		public get_key_disp_info_by_index(code[]) {
			DECLARE_KEY_DISP_STATUS_TABLE()
			new keyIdx;

			keyIdx = (atoi(code) * 4) + get_int(g_key_mode);

			return keyDispInfo[keyIdx];
		}
	}

	parts{
		part{
			name: "keypad.bg";
			type: RECT;
			mouse_events: 1;
			description{
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
		part{
			name: "keypad.bg.image";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;

			description{
				state: "default" 0.0;
				fixed: 1 1;

				rel1{
					relative: 0.0 0.0;
					to: "keypad.bg";
				}
				rel2{
					relative: 1.0 1.0;
					to: "keypad.bg";
				}
				image {
					normal: "RB07_keypad_bg.png";
					border: 9 9 9 9;
					border_scale: 1;
				}
			}
			description{
				state: "small" 0.0;
				inherit: "default" 0.0;

				rel1{
					relative: KEYPAD_REL_W(0) KEYPAD_REL_H(108);
					to: "keypad.bg";
				}
				rel2{
					relative: KEYPAD_REL_W(KEYPAD_PANEL_WIDTH) KEYPAD_REL_H(KEYPAD_PANEL_HEIGHT);
					to: "keypad.bg";
				}
			}
		}

		PART_KEYPAD_PLAIN_BUTTON("0",   4, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("1",  76, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("2", 148, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("3", 220, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("4", 292, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("5", 364, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("6", 436, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("7", 508, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("8", 580, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("9", 652, 10, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")

		PART_KEYPAD_PLAIN_BUTTON("10",   4, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("11",  76, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("12", 148, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("13", 220, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("14", 292, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("15", 364, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("16", 436, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("17", 508, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("18", 580, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("19", 652, 118, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")

		PART_KEYPAD_PLAIN_BUTTON("20",  40, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("21", 112, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("22", 184, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("23", 256, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("24", 328, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("25", 400, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("26", 472, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("27", 544, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("28", 616, 226, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")

		PART_KEYPAD_PLAIN_BUTTON("29", 112, 334, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("30", 184, 334, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("31", 256, 334, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("32", 328, 334, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("33", 400, 334, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("34", 472, 334, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("35", 544, 334, "RB07_key_btn_01.png", "RB07_key_btn_perss.png")

		PART_KEYPAD_PLAIN_BUTTON("36", (4+98+10+98+10), 442, "RB07_key_btn_02.png", "RB07_key_btn_perss.png")
		PART_KEYPAD_PLAIN_BUTTON("37", 544, 442, "RB07_key_btn_02.png", "RB07_key_btn_perss.png")

		part {
			name: "FUNCTION_0";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: KEYPAD_REL_W(4) KEYPAD_REL_H(442); to:"keypad.bg";}
				rel2 { relative: KEYPAD_REL_W(4+98) KEYPAD_REL_H(442+KEYPAD_BUTTON_HEIGHT); to:"keypad.bg"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_key_btn_02.png";
					border: 9 9 9 9;
					border_scale: 1;
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image.normal: "RB07_key_btn_perss.png";
			}
			description {
				state: "hide" 0.0;
				visible: 0;
			}
		}
		part {
			name: "FUNCTION_0_icon";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				min: 80 80;
				rel1 { relative: 0.5 0.5; to:"FUNCTION_0";}
				rel2 { relative: 0.5 0.5; to:"FUNCTION_0"; }
				image {
					normal: "ls_button_sos_phone.png";
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "ls_button_sos_phone.png";
				}
			}
		}

		part {
			name: "FUNCTION_1";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: KEYPAD_REL_W(4+98+10) KEYPAD_REL_H(442); to:"keypad.bg";}
				rel2 { relative: KEYPAD_REL_W(4+98+10+98) KEYPAD_REL_H(442+KEYPAD_BUTTON_HEIGHT); to:"keypad.bg"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_key_btn_02.png";
					border: 9 9 9 9;
					border_scale: 1;
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image.normal: "RB07_key_btn_perss.png";
			}
			description {
				state: "hide" 0.0;
				visible: 0;
			}
		}
		part {
			name: "FUNCTION_1_TEXT";
			type: TEXT;
			scale: 1;
			effect: SHADOW;
			mouse_events: 0;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 KEYPAD_BUTTON_REL_H(0); to: "FUNCTION_1";}
				rel2 { relative: 1.0 KEYPAD_BUTTON_REL_H(KEYPAD_BUTTON_HEIGHT); to: "FUNCTION_1";}
				fixed: 1 1;
				align: 0.5 0.5;
				color: 255 255 255 255;
				text {
					font: "Tizen:style=Bold";
					text_class: "tizen";
					text: "?123";
					size: 26;
					min:  0 0;
					align: 0.5 0.5;
				}
			}
			description {
				state: "mode_3_4" 0.0;
				inherit: "default" 0.0;
				text {
					text: "abc";
				}
			}
		}

		part {
			name: "FUNCTION_2";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: KEYPAD_REL_W(4) KEYPAD_REL_H(334); to:"keypad.bg";}
				rel2 { relative: KEYPAD_REL_W(4+86) KEYPAD_REL_H(334+KEYPAD_BUTTON_HEIGHT); to:"keypad.bg"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_key_btn_02.png";
					border: 9 9 9 9;
					border_scale: 1;
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image.normal: "RB07_key_btn_perss.png";
			}
			description {
				state: "hide" 0.0;
				visible: 0;
			}
		}
		part {
			name: "FUNCTION_2_icon";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				min: 50 50;
				rel1 { relative: 0.5 0.5; to:"FUNCTION_2";}
				rel2 { relative: 0.5 0.5; to:"FUNCTION_2"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_icon_shift_normal.png";
				}
			}
			description {
				state: "mode_3_4" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "RB07_icon_shift_focused.png";
				}
			}
			description {
				state: "hide" 0.0;
				visible: 0;
			}
		}
		part {
			name: "FUNCTION_2_TEXT";
			type: TEXT;
			scale: 1;
			effect: SHADOW;
			mouse_events: 0;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 KEYPAD_BUTTON_REL_H(0); to: "FUNCTION_2";}
				rel2 { relative: 1.0 KEYPAD_BUTTON_REL_H(KEYPAD_BUTTON_HEIGHT); to: "FUNCTION_2";}
				fixed: 1 1;
				align: 0.5 0.5;
				color: 255 255 255 255;
				text {
					font: "Tizen:style=Bold";
					text_class: "tizen";
					text: " ";
					size: 26;
					min:  0 0;
					align: 0.5 0.5;
				}
			}
			description {
				state: "mode_3_4_1" 0.0;
				inherit: "default" 0.0;
				text {
					text: "1/2";
				}
			}
			description {
				state: "mode_3_4_2" 0.0;
				inherit: "default" 0.0;
				text {
					text: "2/2";
				}
			}
		}

		part {
			name: "FUNCTION_3";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: KEYPAD_REL_W(628) KEYPAD_REL_H(334); to:"keypad.bg";}
				rel2 { relative: KEYPAD_REL_W(628+86) KEYPAD_REL_H(334+KEYPAD_BUTTON_HEIGHT); to:"keypad.bg"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_key_btn_02.png";
					border: 9 9 9 9;
					border_scale: 1;
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image.normal: "RB07_key_btn_perss.png";
			}
			description {
				state: "hide" 0.0;
				visible: 0;
			}
		}
		part {
			name: "FUNCTION_3_icon";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				min: 50 50;
				rel1 { relative: 0.5 0.5; to:"FUNCTION_3";}
				rel2 { relative: 0.5 0.5; to:"FUNCTION_3"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_icon_back_normal.png";
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "RB07_icon_back_press.png";
				}
			}
		}

		part {
			name: "FUNCTION_4";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: KEYPAD_REL_W(616) KEYPAD_REL_H(442); to:"keypad.bg";}
				rel2 { relative: KEYPAD_REL_W(616+98) KEYPAD_REL_H(442+KEYPAD_BUTTON_HEIGHT); to:"keypad.bg"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_key_btn_02.png";
					border: 9 9 9 9;
					border_scale: 1;
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image.normal: "RB07_key_btn_perss.png";
			}
			description {
				state: "hide" 0.0;
				visible: 0;
			}
		}
		part {
			name: "FUNCTION_4_icon";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				min: 50 50;
				rel1 { relative: 0.5 0.5; to:"FUNCTION_4";}
				rel2 { relative: 0.5 0.5; to:"FUNCTION_4"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_icon_enter.png";
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "RB07_icon_enter.png";
				}
			}
		}

		part {
			name: "FUNCTION_5";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: KEYPAD_REL_W(4+98+10+98+10+62+10) KEYPAD_REL_H(442); to:"keypad.bg";}
				rel2 { relative: KEYPAD_REL_W(544-10) KEYPAD_REL_H(442+KEYPAD_BUTTON_HEIGHT); to:"keypad.bg"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_key_btn_02.png";
					border: 9 9 9 9;
					border_scale: 1;
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image.normal: "RB07_key_btn_perss.png";
			}
			description {
				state: "hide" 0.0;
				visible: 0;
			}
		}
		part {
			name: "FUNCTION_5_icon";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				min: 82 28;
				rel1 { relative: 0.5 0.5; to:"FUNCTION_5";}
				rel2 { relative: 0.5 0.5; to:"FUNCTION_5"; }
				color: 255 255 255 255;
				image {
					normal: "RB07_icon_space.png";
				}
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "RB07_icon_space.png";
				}
			}
		}
	}

	programs {
		program {
			name: "init_keypad";
			signal: "load";
			script{
				init_qwerty_keypad();
			}
		}
		PROG_KEYPAD_PLAIN_BUTTON("0")
		PROG_KEYPAD_PLAIN_BUTTON("1")
		PROG_KEYPAD_PLAIN_BUTTON("2")
		PROG_KEYPAD_PLAIN_BUTTON("3")
		PROG_KEYPAD_PLAIN_BUTTON("4")
		PROG_KEYPAD_PLAIN_BUTTON("5")
		PROG_KEYPAD_PLAIN_BUTTON("6")
		PROG_KEYPAD_PLAIN_BUTTON("7")
		PROG_KEYPAD_PLAIN_BUTTON("8")
		PROG_KEYPAD_PLAIN_BUTTON("9")
		PROG_KEYPAD_PLAIN_BUTTON("10")
		PROG_KEYPAD_PLAIN_BUTTON("11")
		PROG_KEYPAD_PLAIN_BUTTON("12")
		PROG_KEYPAD_PLAIN_BUTTON("13")
		PROG_KEYPAD_PLAIN_BUTTON("14")
		PROG_KEYPAD_PLAIN_BUTTON("15")
		PROG_KEYPAD_PLAIN_BUTTON("16")
		PROG_KEYPAD_PLAIN_BUTTON("17")
		PROG_KEYPAD_PLAIN_BUTTON("18")
		PROG_KEYPAD_PLAIN_BUTTON("19")
		PROG_KEYPAD_PLAIN_BUTTON("20")
		PROG_KEYPAD_PLAIN_BUTTON("21")
		PROG_KEYPAD_PLAIN_BUTTON("22")
		PROG_KEYPAD_PLAIN_BUTTON("23")
		PROG_KEYPAD_PLAIN_BUTTON("24")
		PROG_KEYPAD_PLAIN_BUTTON("25")
		PROG_KEYPAD_PLAIN_BUTTON("26")
		PROG_KEYPAD_PLAIN_BUTTON("27")
		PROG_KEYPAD_PLAIN_BUTTON("28")
		PROG_KEYPAD_PLAIN_BUTTON("29")
		PROG_KEYPAD_PLAIN_BUTTON("30")
		PROG_KEYPAD_PLAIN_BUTTON("31")
		PROG_KEYPAD_PLAIN_BUTTON("32")
		PROG_KEYPAD_PLAIN_BUTTON("33")
		PROG_KEYPAD_PLAIN_BUTTON("34")
		PROG_KEYPAD_PLAIN_BUTTON("35")
		PROG_KEYPAD_PLAIN_BUTTON("36")
		PROG_KEYPAD_PLAIN_BUTTON("37")

		PROG_BUTTON_REACTION("FUNCTION_0")
		PROG_BUTTON_REACTION("FUNCTION_1")
		PROG_BUTTON_REACTION("FUNCTION_2")
		PROG_BUTTON_REACTION("FUNCTION_3")
		PROG_BUTTON_REACTION("FUNCTION_4")
		PROG_BUTTON_REACTION("FUNCTION_5")

		program {
			name: "clicked_FUNCTION_0";
			signal: "mouse,clicked,1";
			source: "FUNCTION_0";
			script{
				emit("pad_qwerty_clicked", "SOS");
			}
		}
		program {
			name: "clicked_FUNCTION_1";
			signal: "mouse,clicked,1";
			source: "FUNCTION_1";
			script{
				new current_mode = get_int(g_key_mode);

				if (current_mode == MODE_ALPHA_LOWER || current_mode == MODE_ALPHA_UPPER) {
					switch_input_mode(MODE_SYMBOL_1);
					set_state(PART:"FUNCTION_1_TEXT", "mode_3_4", 0.0);
					set_state(PART:"FUNCTION_2_icon", "hide", 0.0);
					set_state(PART:"FUNCTION_2_TEXT", "mode_3_4_1", 0.0);
					set_state(PART:"keypad.bg.image", "small", 0.0);
				}
				if (current_mode == MODE_SYMBOL_1 || current_mode == MODE_SYMBOL_2) {
					switch_input_mode(MODE_ALPHA_LOWER);
					set_state(PART:"FUNCTION_1_TEXT", "default", 0.0);
					set_state(PART:"FUNCTION_2_icon", "default", 0.0);
					set_state(PART:"FUNCTION_2_TEXT", "default", 0.0);
					set_state(PART:"keypad.bg.image", "default", 0.0);
				}

				emit("pad_qwerty_clicked", "function1");
			}
		}
		program {
			name: "clicked_FUNCTION_2";
			signal: "mouse,clicked,1";
			source: "FUNCTION_2";
			script{
				new current_mode = get_int(g_key_mode);

				if (current_mode == MODE_ALPHA_LOWER) {
					switch_input_mode(MODE_ALPHA_UPPER);
					set_state(PART:"FUNCTION_2_icon", "pressed", 0.0);
					set_state(PART:"FUNCTION_2_TEXT", "default", 0.0);
				}
				if (current_mode == MODE_ALPHA_UPPER) {
					switch_input_mode(MODE_ALPHA_LOWER);
					set_state(PART:"FUNCTION_2_icon", "default", 0.0);
					set_state(PART:"FUNCTION_2_TEXT", "default", 0.0);
				}
				if (current_mode == MODE_SYMBOL_1) {
					switch_input_mode(MODE_SYMBOL_2);
					set_state(PART:"FUNCTION_2_icon", "hide", 0.0);
					set_state(PART:"FUNCTION_2_TEXT", "mode_3_4_2", 0.0);
				}
				if (current_mode == MODE_SYMBOL_2) {
					switch_input_mode(MODE_SYMBOL_1);
					set_state(PART:"FUNCTION_2_icon", "hide", 0.0);
					set_state(PART:"FUNCTION_2_TEXT", "mode_3_4_1", 0.0);
				}

				emit("pad_qwerty_clicked", "function2");
			}
		}
		program {
			name: "clicked_FUNCTION_3";
			signal: "mouse,clicked,1";
			source: "FUNCTION_3";
			script{
				emit("pad_qwerty_clicked", "bs");
			}
		}
		program {
			name: "clicked_FUNCTION_4";
			signal: "mouse,clicked,1";
			source: "FUNCTION_4";
			script{
				emit("pad_qwerty_clicked", "enter");
			}
		}
		program {
			name: "clicked_FUNCTION_5";
			signal: "mouse,clicked,1";
			source: "FUNCTION_5";
			script{
				emit("pad_qwerty_clicked", "space");
			}
		}
	}
}
