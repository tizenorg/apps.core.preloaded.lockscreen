CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(lockscreen C)

SET(SRCS
	${CMAKE_SOURCE_DIR}/src/lockscreen.c
	${CMAKE_SOURCE_DIR}/src/util.c
	${CMAKE_SOURCE_DIR}/src/sim-state.c
	${CMAKE_SOURCE_DIR}/src/info.c
	${CMAKE_SOURCE_DIR}/src/bg.c
	${CMAKE_SOURCE_DIR}/src/noti.c
	${CMAKE_SOURCE_DIR}/src/simple-password.c
	${CMAKE_SOURCE_DIR}/src/complex-password.c
	${CMAKE_SOURCE_DIR}/src/password-verification.c
)

SET(VENDOR "tizen")
SET(PACKAGE ${PROJECT_NAME})
SET(PKGNAME "org.${VENDOR}.${PACKAGE}")
SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(BINDIR "${PREFIX}/bin")
SET(RESDIR "${PREFIX}/res")
SET(DATADIR "/opt/usr/${PKGNAME}/data")
SET(LOCALEDIR "${RESDIR}/locale")
SET(IMAGEDIR "${RESDIR}/image/${PROJECT_NAME}")
SET(EDJEDIR "${RESDIR}/edje/${PROJECT_NAME}")
SET(ETCDIR "${RESDIR}/etc/${PROJECT_NAME}")
SET(MANIFESTXMLDIR "/usr/share/packages")

IF("${CMAKE_BUILD_TYPE}" STREQUAL "")
	SET(CMAKE_BUILD_TYPE "Release")
ENDIF("${CMAKE_BUILD_TYPE}" STREQUAL "")
MESSAGE("Build type: ${CMAKE_BUILD_TYPE}")

INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}
	${CMAKE_SOURCE_DIR}/src
)

INCLUDE(FindPkgConfig)
pkg_check_modules(pkgs REQUIRED
	capi-appfw-application
	ecore-x
	appcore-efl
	utilX
	ail
	notification
	security-server
	ui-gadget-1
	heynoti
	capi-system-info
)

FOREACH(flag ${pkgs_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag} -fpie")
ENDFOREACH(flag)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS}")
SET(CMAKE_C_FLAGS_DEBUG "-O0 -g")
SET(CMAKE_C_FLAGS_RELEASE "-O2")

FIND_PROGRAM(UNAME NAMES uname)
EXEC_PROGRAM("${UNAME}" ARGS "-m" OUTPUT_VARIABLE "ARCH")
IF("${ARCH}" STREQUAL "arm")
	ADD_DEFINITIONS("-DTARGET")
	MESSAGE("add -DTARGET")
ENDIF("${ARCH}" STREQUAL "arm")

ADD_DEFINITIONS("-DVENDOR=\"${VENDOR}\"")
ADD_DEFINITIONS("-DPACKAGE=\"${PACKAGE}\"")
ADD_DEFINITIONS("-DPACKAGE_NAME=\"${PKGNAME}\"")
ADD_DEFINITIONS("-DPREFIX=\"${PREFIX}\"")
ADD_DEFINITIONS("-DRESDIR=\"${RESDIR}\"")
ADD_DEFINITIONS("-DDATADIR=\"${DATADIR}\"")
ADD_DEFINITIONS("-DLOCALEDIR=\"${LOCALEDIR}\"")
ADD_DEFINITIONS("-DIMAGEDIR=\"${IMAGEDIR}\"")
ADD_DEFINITIONS("-DICONDIR=\"${ICONDIR}\"")
ADD_DEFINITIONS("-DEDJEDIR=\"${EDJEDIR}\"")
ADD_DEFINITIONS("-DETCDIR=\"${ETCDIR}\"")

SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--as-needed -pie")

ADD_EXECUTABLE(${PROJECT_NAME} ${SRCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS} "-lm")

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION ${BINDIR})

ADD_CUSTOM_TARGET(lockscreen.edj
		COMMAND edje_cc -id ${CMAKE_CURRENT_SOURCE_DIR}/data/images/
		${CMAKE_CURRENT_SOURCE_DIR}/data/lockscreen.edc
		${CMAKE_BINARY_DIR}/lockscreen.edj
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/data/lockscreen.edc
)
ADD_CUSTOM_TARGET(lockscreen-entry.edj
		COMMAND edje_cc -id ${CMAKE_CURRENT_SOURCE_DIR}/data/images/
		${CMAKE_CURRENT_SOURCE_DIR}/data/lockscreen-entry.edc
		${CMAKE_BINARY_DIR}/lockscreen-entry.edj
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/data/lockscreen-entry.edc
)

ADD_DEPENDENCIES(${PROJECT_NAME} lockscreen.edj _theme.edj)
ADD_DEPENDENCIES(${PROJECT_NAME} lockscreen-entry.edj)
INSTALL(FILES ${CMAKE_BINARY_DIR}/lockscreen.edj DESTINATION ${EDJEDIR})
INSTALL(FILES ${CMAKE_BINARY_DIR}/lockscreen-entry.edj DESTINATION ${EDJEDIR})

CONFIGURE_FILE(${PKGNAME}.xml.in ${CMAKE_BINARY_DIR}/${PKGNAME}.xml)
INSTALL(FILES ${CMAKE_BINARY_DIR}/${PKGNAME}.xml DESTINATION ${MANIFESTXMLDIR})

INSTALL(DIRECTORY DESTINATION ${DATADIR})

ADD_SUBDIRECTORY(po)